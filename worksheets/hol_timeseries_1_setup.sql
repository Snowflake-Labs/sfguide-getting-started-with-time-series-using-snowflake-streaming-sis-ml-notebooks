-- Login as ACCOUNTADMIN
USE ROLE ACCOUNTADMIN;

-- Find your account details
SELECT SYSTEM$ALLOWLIST();

/* EXTERNAL ACTIVITY

Use the system$allowlist() command to find your Snowflake hostname and deployment detail

NOTE: We'll only require the account locator and cloud region portion of the host: <account_locator>.<cloud_region_id>.snowflakecomputing.com
For example if your host is xy12345.us-east-2.aws.snowflakecomputing.com then only copy xy12345.us-east-1

Use the copied host information to update the deployment variable in the following files of your forked QuickStart repo:

.snowlfake/config.toml - update <SNOWFLAKE_DEPLOYMENT> for both connections account parameter
iotstream/snowflake.properties - update <SNOWFLAKE_DEPLOYMENT> for account and host parameter

*/

-- Setup HOL role and user
USE ROLE ACCOUNTADMIN;
CREATE ROLE IF NOT EXISTS ROLE_HOL_TIMESERIES;
GRANT ROLE ROLE_HOL_TIMESERIES TO ROLE SYSADMIN;
CREATE OR REPLACE USER USER_HOL_TIMESERIES DEFAULT_ROLE = "ROLE_HOL_TIMESERIES" COMMENT = "HOL Time Series user.";
GRANT ROLE ROLE_HOL_TIMESERIES TO USER USER_HOL_TIMESERIES;

/* EXTERNAL ACTIVITY

A public key is setup in Github Codespace Devcontainer

Retrieve the public key detail and replace <RSA_PUBLIC_KEY> with the contents of the public key
excluding the -----BEGIN PUBLIC KEY----- and -----END PUBLIC KEY----- lines

*/

ALTER USER USER_HOL_TIMESERIES SET RSA_PUBLIC_KEY='<RSA_PUBLIC_KEY>';

SHOW ROLES;

-- Setup HOL infrastructure objects
USE ROLE SYSADMIN;

-- Transform WH
CREATE WAREHOUSE IF NOT EXISTS HOL_TRANSFORM_WH WITH WAREHOUSE_SIZE = XSMALL AUTO_SUSPEND = 60 AUTO_RESUME = TRUE INITIALLY_SUSPENDED = TRUE COMMENT = 'Transform Warehouse' ENABLE_QUERY_ACCELERATION = TRUE;
-- Analytics WH
CREATE WAREHOUSE IF NOT EXISTS HOL_ANALYTICS_WH WITH WAREHOUSE_SIZE = XSMALL AUTO_SUSPEND = 60 AUTO_RESUME = TRUE INITIALLY_SUSPENDED = TRUE COMMENT = 'Analytics Warehouse' ENABLE_QUERY_ACCELERATION = TRUE;
-- HOL Database
CREATE DATABASE IF NOT EXISTS HOL_TIMESERIES COMMENT = 'HOL Time Series database.';
-- HOL Schemas
CREATE SCHEMA IF NOT EXISTS HOL_TIMESERIES.STAGING WITH MANAGED ACCESS COMMENT = 'HOL Time Series STAGING schema.';
CREATE SCHEMA IF NOT EXISTS HOL_TIMESERIES.TRANSFORM WITH MANAGED ACCESS COMMENT = 'HOL Time Series TRANSFORM schema.';
CREATE SCHEMA IF NOT EXISTS HOL_TIMESERIES.ANALYTICS WITH MANAGED ACCESS COMMENT = 'HOL Time Series ANALYTICS schema.';

-- Grant HOL role object access
GRANT USAGE ON DATABASE HOL_TIMESERIES TO ROLE ROLE_HOL_TIMESERIES;
GRANT ALL ON WAREHOUSE HOL_TRANSFORM_WH TO ROLE ROLE_HOL_TIMESERIES;
GRANT ALL ON WAREHOUSE HOL_REPORT_WH TO ROLE ROLE_HOL_TIMESERIES;
GRANT ALL ON SCHEMA HOL_TIMESERIES.STAGING TO ROLE ROLE_HOL_TIMESERIES;
GRANT ALL ON SCHEMA HOL_TIMESERIES.TRANSFORM TO ROLE ROLE_HOL_TIMESERIES;
GRANT ALL ON SCHEMA HOL_TIMESERIES.ANALYTICS TO ROLE ROLE_HOL_TIMESERIES;
